Server Sent Events
    The server maintains a continuous connection to send updates to the client as soon as new data is available. This allows the client to receive real-time data with minimal latency.
Pros:
    => Efficient Data Delivery: The server pushes updates to the client only when new data is available, reducing unnecessary network traffic.
    => Simple Implementation: Easy to implement over HTTP, with no need for complex protocols or bidirectional communication.
    => Real-Time Updates: Provides real-time data delivery, ideal for applications that require live updates like stock tickers, notifications, or live feeds.

Cons:
    => Limited Browser Connections: Browsers like Chrome limit the number of SSE connections per domain (e.g., Chrome allows only six concurrent connections).
    => Single-Direction Communication: SSE supports only server-to-client communication, which can be a limitation if bidirectional data exchange is needed.
    => Scalability Concerns: Managing a large number of persistent connections can strain server resources and impact performance, especially with many concurrent clients.